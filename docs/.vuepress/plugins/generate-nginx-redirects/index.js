const fsp = require('fs').promises;
const path = require('path');
const { logger, ensureEndingSlash } = require('@vuepress/shared-utils');

const fileHead = '# --- THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY!!! ---';

module.exports = (options, context) => {
  const pluginName = 'hot/generate-nginx-redirects';
  const outputFile = options.outputFile || path.resolve(context.sourceDir, 'redirects.conf');

  return {
    name: pluginName,

    async chainMarkdown() {
      // Workaround for the lack of the hook/callback in the VuePress that is triggered
      // before the "extendPageData" function.
      try {
        await fsp.writeFile(outputFile, fileHead);
      } catch (ex) {
        logger.error(`Something bad happens while writing to the file (${outputFile}): ${ex}`);
      }
    },

    /**
     * Based on the permalink of the latest docs version generate nginx redirect rules.
     *
     * @param {object} $page The $page value of the page youâ€™re currently reading.
     */
    async extendPageData($page) {
      if (!$page.currentVersion || !$page.latestVersion) {
        logger.error('The "currentVersion" and/or "latestVersion" is not set.');
      }

      if ($page.currentVersion === $page.latestVersion && $page.frontmatter.permalink) {
        const from = `/${$page.latestVersion}${$page.frontmatter.permalink}`;
        const to = ensureEndingSlash($page.frontmatter.permalink);
        const redirectRule = `\n rewrite ^${from}$ ${to} permanent;`;

        try {
          await fsp.appendFile(outputFile, redirectRule);
        } catch (ex) {
          logger.error(`Something bad happens while writing to the file (${outputFile}): ${ex}`);
        }
      }
    }
  };
};
