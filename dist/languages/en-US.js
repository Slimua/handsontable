,l=a;u<l.length;u++){var p=l[u];if(util.arraysEqual(p,i)){s=!0;break}}s||a.push(i)}if(a.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}},t.prototype.mergeFunction=function(e){var t=this;return tidy(function(){return concatenate(e,t.axis)})},t.prototype.computeOutputShape=function(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");for(var t=e,r=t[0].slice(),n=this.axis<0?r.length+this.axis:this.axis,a=0,o=t.slice(1);a<o.length;a++){var i=o[a];if(null==r[n]||null==i[n]){r[n]=null;break}r[n]+=i[n]}return r},t.prototype.computeMask=function(e,t){throw new NotImplementedError("computeMask has not been implemented for Concatenate yet")},t.prototype.getConfig=function(){var t={axis:this.axis},r=e.prototype.getConfig.call(this);return Object.assign(t,r),t},t.className="Concatenate",t}(Merge);function interpretAxis(e,t){for(;e<0;)e+=t;return e}function batchDot(e,t,r){if(e.shape.length>3||t.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(util.assert(e.shape.length>=2,"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),util.assert(e.shape.length>=2,"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof r&&(r=[r,r]),"complex64"===e.dtype||"complex64"===t.dtype)throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");var n=e.shape.length,a=t.shape.length;null==r&&(r=[n-1,a-2]);var o=r;return tidy(function(){var r,i;if(n>a){r=n-a;for(var s=[],u=0;u<r;++u)s.push(1);t=t.reshape(t.shape.concat(s))}else if(a>n){for(r=a-n,s=[],u=0;u<r;++u)s.push(1);e=e.reshape(e.shape.concat(s))}else r=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?e.mulStrict(t).sum(o[0]):e.transpose([1,0]).mulStrict(t).sum(o[1]);else{var l=o[0]!==e.shape.length-1||null,p=o[1]===t.shape.length-1||null;i=e.matMul(t,l,p)}if(r>0){var c,d=[];for(u=c=n>a?n+a-3:n-1;u<c+r;++u)d.push(u);i=i.squeeze(d)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}serialization.registerClass(Concatenate);var Dot=function(e){function t(t){var r=e.call(this,t)||this;return r.axes=t.axes,r.normalize=null!=t.normalize&&t.normalize,r.supportsMasking=!0,r.reshapeRequired=!1,r}return __extends$1(t,e),t.prototype.build=function(e){util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),"A `Dot` layer should be called on a list of exactly 2 inputs.");var t=e[0],r=e[1];if(t.length>3||r.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");var n=this.interpretAxes(t,r);if(t[n[0]]!==r[n[1]])throw new ValueError("Dimension incompatibility: "+t[n[0]]+" !== "+r[n[1]])},t.prototype.mergeFunction=function(e){if(2!==e.length)throw new ValueError("A `Dot` layer must be called on exactly 2 inputs, but received "+e.length+" input(s).");var t,r=e[0],n=e[1];return t=Array.isArray(this.axes)?this.axes.map(function(t,r){return interpretAxis(t,e[r].shape.length)}):[interpretAxis(this.axes,r.shape.length),interpretAxis(this.axes,n.shape.length)],this.normalize&&(r=l2Normalize(r,t[0]),n=l2Normalize(n,t[1])),batchDot(r,n,t)},t.prototype.interpretAxes=function(e,t){return Array.isArray(this.axes)?this.axes:[interpretAxis(this.axes,e.length),interpretAxis(this.axes,t.length)]},t.prototype.computeOutputShape=function(e){util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),"A `Dot` layer should be called on a list of exactly 2 inputs.");var t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");var n=this.interpretAxes(t,r);t.splice(n[0],1),r.splice(n[1],1),r.splice(0,1);var a=t.concat(r);return 1===a.length&&a.push(1),a},t.prototype.computeMask=function(e,t){throw new NotImplementedError("computeMask has not been implemented for Dot yet")},t.prototype.getConfig=function(){var t={axes:this.axes,normalize:this.normalize},r=e.prototype.getConfig.call(this);return Object.assign(t,r),t},t.className="Dot",t}(Merge);function batchNormalization$1(e,t,r,n,a,o){var i;if(void 0===o&&(o=.001),2===e.rank)i=batchNormalization2d(e,t,r,o,a,n);else if(3===e.rank)i=batchNormalization3d(e,t,r,o,a,n);else{if(4!==e.rank)throw new NotImplementedError("batchNormalization is not implemented for array of rank "+e.rank+" yet");i=batchNormalization4d(e,t,r,o,a,n)}return i}function regularNormalizeBatchInTraining(e,t,r,n,a){return void 0===a&&(a=.001),tidy(function(){var o=moments(e,n),i=o.mean,s=o.variance;return[batchNormalization$1(e,i,s,r,t,a),i,s]})}function broadcastNormalizeBatchInTraining(e,t,r,n,a){return void 0===a&&(a=.001),tidy(function(){for(var o=moments(e,n),i=o.mean,s=o.variance,u=[],l=0,p=range$1(0,e.rank);l<p.length;l++){var c=p[l];-1!==n.indexOf(c)?u.push(1):u.push(e.shape[c])}var d=i.reshape(u),h=s.reshape(u),f=null==t?null:t.reshape(u),m=null==r?null:r.reshape(u);return[batchNormalization$1(e,d,h,m,f,a),i,s]})}function normalizeBatchInTraining(e,t,r,n,a){return void 0===a&&(a=.001),util.arraysEqual(n.slice().sort(),range$1(0,e.rank-1))?regularNormalizeBatchInTraining(e,t,r,n,a):broadcastNormalizeBatchInTraining(e,t,r,n,a)}serialization.registerClass(Dot);var BatchNormalization=function(e){function t(t){var r=this;return null==t&&(t={}),(r=e.call(this,t)||this).supportsMasking=!0,r.axis=null==t.axis?-1:t.axis,r.momentum=null==t.momentum?.99:t.momentum,r.epsilon=null==t.epsilon?.001:t.epsilon,r.center=null==t.center||t.center,r.scale=null==t.scale||t.scale,r.betaInitializer=getInitializer(t.betaInitializer||"zeros"),r.gammaInitializer=getInitializer(t.gammaInitializer||"ones"),r.movingMeanInitializer=getInitializer(t.movingMeanInitializer||"zeros"),r.movingVarianceInitializer=getInitializer(t.movingVarianceInitializer||"ones"),r.betaConstraint=getConstraint(t.betaConstraint),r.gammaConstraint=getConstraint(t.gammaConstraint),r.betaRegularizer=getRegularizer(t.betaRegularizer),r.gammaRegularizer=getRegularizer(t.gammaRegularizer),r.stepCount=0,r}return __extends$1(t,e),t.prototype.build=function(e){e=getExactlyOneShape(e);var t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(null==r)throw new ValueError("Axis "+t+" of input tensor should have a defined dimension but the layer received an input with shape "+JSON.stringify(e)+".");this.inputSpec=[new InputSpec({ndim:e.length,axes:(n={},n[t]=r,n)})];var n,a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0},t.prototype.call=function(e,t){var r=this;return tidy(function(){var n=null!=t.training&&t.training,a=getExactlyOneTensor(e),o=a.shape,i=o.length,s=range$1(0,i),u=r.axis>=0?r.axis:r.axis+i;s.splice(u,1);var l=pyListRepeat(1,i);l[u]=o[u];var p=s.slice();p.sort();var c=!util.arraysEqual(p,range$1(0,i).slice(0,i-1));if(!n)return function(){if(c){var e=r.movingMean.read().reshape(l),t=r.movingVariance.read().reshape(l),n=r.center?r.beta.read().reshape(l):null,o=r.scale?r.gamma.read().reshape(l):null;return batchNormalization$1(a,e,t,n,o,r.epsilon)}return batchNormalization$1(a,r.movingMean.read(),r.movingVariance.read(),null==r.beta?null:r.beta.read(),null==r.gamma?null:r.gamma.read(),r.epsilon)}();var d=normalizeBatchInTraining(a,r.gamma.read(),r.beta.read(),s,r.epsilon),h=d[0],f=d[1],m=d[2],g=arrayProd(s.map(function(e){return a.shape[e]})),y=m.mul(getScalar(g/(g-(1+r.epsilon))));return function(){r.stepCount++;var e=movingAverage(r.movingMean.read(),f,r.momentum,r.stepCount);r.movingMean.write(e);var t=movingAverage(r.movingVariance.read(),y,r.momentum,r.stepCount);r.movingVariance.write(t)}(),h})},t.prototype.getConfig=function(){var t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},r=e.prototype.getConfig.call(this);return Object.assign(t,r),t},t.className="BatchNormalization",t}(Layer);function spatial2dPadding(e,t,r){return tidy(function(){if(4!==e.rank)throw new ValueError("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r=imageDataFormat()),"channelsLast"!==r&&"channelsFirst"!==r)throw new ValueError("Unknown data format: "+r+". Supported data formats are 'channelsLast' and 'channelsFirst.");var n;return n="channelsFirst"===r?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],pad(e,n)})}serialization.registerClass(BatchNormalization);var ZeroPadding2D=function(e){function t(t){var r=this;if(null==t&&(t={}),(r=e.call(this,t)||this).dataFormat=null==t.dataFormat?imageDataFormat():t.dataFormat,null==t.padding)r.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)r.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new ValueError("ZeroPadding2D expects padding to be a length-2 array, but received a length-"+t.padding.length+" array.");var n=void 0,a=void 0;if("number"==typeof t.padding[0])n=[t.padding[0],t.padding[0]],a=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new ValueError("ZeroPadding2D expects height padding to be a length-2 array, but received a length-"+t.padding[0].length+" array.");if(n=t.padding[0],2!==t.padding[1].length)throw new ValueError("ZeroPadding2D expects width padding to be a length-2 array, but received a length-"+t.padding[1].length+" array.");a=t.padding[1]}r.padding=[n,a]}return r.inputSpec=[new InputSpec({ndim:4})],r}return __extends$1(t,e),t.prototype.computeOutputShape=function(e){var t,r;return e=getExactlyOneShape(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,r]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,r,e[3]])}